// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  username  String   @unique
  email     String   @unique
  posts     Post[]
  role      String   @default("DEFAULT")
  createdAt DateTime @default(now())
  password  String   @default("")

  notificationsSent     Notification[] @relation("FromUser")
  notificationsReceived Notification[] @relation("ToUser")

  likes Like[]

  followers Follow[] @relation("Followers")
  following Follow[] @relation("Following")

  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String

  parentPost   Post?   @relation("PostReplies", fields: [parentPostId], references: [id])
  parentPostId String?

  replies Post[] @relation("PostReplies")

  notifications Notification[]

  likes Like[] @relation()

  @@map("posts")
}

model Notification {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  type      String

  fromUser   User   @relation("FromUser", fields: [fromUserId], references: [id])
  fromUserId String

  toUser   User   @relation("ToUser", fields: [toUserId], references: [id])
  toUserId String

  post   Post?   @relation(fields: [postId], references: [id])
  postId String?
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Follow {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  follower   User   @relation("Followers", fields: [followerId], references: [id])
  followerId String

  following   User   @relation("Following", fields: [followingId], references: [id])
  followingId String

  @@unique([followerId, followingId])
}
